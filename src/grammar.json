{
  "name": "dodu",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_declaration"
      }
    },
    "identifier": {
      "type": "PATTERN",
      "value": "([^ \\[\\]\\(\\)\\{\\},;\\n\\t\\\\.0-9])+"
    },
    "_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          },
          "named": true,
          "value": "name"
        },
        {
          "type": "STRING",
          "value": "<-"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "STRING",
          "value": "."
        }
      ]
    },
    "list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_expression"
                  },
                  {
                    "type": "STRING",
                    "value": ";"
                  }
                ]
              }
            },
            {
              "type": "SYMBOL",
              "name": "_expression"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "ALIAS",
          "content": {
            "type": "PATTERN",
            "value": "\\\"(\\\\.|[^\"\\\\])*\\\""
          },
          "named": true,
          "value": "string"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "PATTERN",
            "value": "[0-9]+"
          },
          "named": true,
          "value": "number"
        },
        {
          "type": "SYMBOL",
          "name": "list"
        }
      ]
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_abstraction"
        },
        {
          "type": "SYMBOL",
          "name": "_composition"
        },
        {
          "type": "SYMBOL",
          "name": "_application"
        },
        {
          "type": "SYMBOL",
          "name": "_letbinding"
        }
      ]
    },
    "_application": {
      "type": "SEQ",
      "members": [
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "_term"
          },
          "named": true,
          "value": "function"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_term"
          }
        }
      ]
    },
    "_abstraction": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\\"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "SYMBOL",
              "name": "identifier"
            },
            "named": true,
            "value": "name"
          }
        },
        {
          "type": "STRING",
          "value": "."
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "_letbinding": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "@"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_declaration"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "_composition": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_application"
        },
        {
          "type": "STRING",
          "value": ","
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "train": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_term"
                },
                {
                  "type": "SYMBOL",
                  "name": "_term"
                }
              ]
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_term"
                },
                {
                  "type": "SYMBOL",
                  "name": "_term"
                },
                {
                  "type": "SYMBOL",
                  "name": "_term"
                }
              ]
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "_term": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "literal"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "train"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "_expression"
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

